No/Yes message Import {All changes that have not been exported yet are lost during the import! [kCr][kCr]Do you want to continue with the import?}
If flag false
	Quit method
End If

Do $cinst.$getAllGitFolders(iPath2LibsDir) Returns lLibrariesList
Do lListMaster.$copydefinition(lLibrariesList)

Do lListMaster.$merge(lLibrariesList)

Do $cinst.$defineErrorMaster(lMasterErrors)
Do $cinst.$defineErrorMaster(lMasterWarnings)

Do lListMaster.$sort(low($ref.name))     ;; Alphabetisch sortieren

For l1 from 1 to lListMaster.$linecount step 1
	Calculate lImportLibName as left(lListMaster('name',l1),rpos('.git',lListMaster('name',l1))-1)
	If lImportLibName=$clib.$name
		Jump to start of loop
	End If
	;  Breakpoint
	Calculate lTmpLibPath as replace(lListMaster('fullname',l1),'.git','_new.lbs')
	Calculate lLibPath as replace(lListMaster('fullname',l1),'.git','.lbs')
	
	Do FileOps.$deletefile(lTmpLibPath)
	Do $root.$importjson(lListMaster('fullname',l1),lTmpLibPath,lErrors,lWarnings) Returns lStatus
	If lErrors.$linecount<1&lStatus
		If FileOps.$doesfileexist(lTmpLibPath)
			Close library {[lImportLibName]}
			Do FileOps.$deletefile(lLibPath) Returns lFileOpsError
			If lFileOpsError=kFileOpsOK|lFileOpsError=kFileOpsFileNotFound     ;; kFileOpsFileNotFound-> in case of a new library, the library doesnt exist yet
				Do FileOps.$movefile(lTmpLibPath,lLibPath) Returns lFileOpsError
				If lFileOpsError=kFileOpsOK&FileOps.$doesfileexist(lLibPath)
					Open library (Do not close others,Enable conversion by runtime,Do not open startup task) {[lLibPath]}
				Else
					No/Yes message Library could not be imported {Library [lImportLibName] could not be imported because the existing .lbs file could not be removed. Do you still want to continue importing more libraries?}
					If flag false
						Do lMasterErrors.$merge(lErrors)
						Do lMasterWarnings.$merge(lWarnings)
						Break to end of loop
					End If
				End If
			End If
		End If
	Else
		No/Yes message Library could not be imported {Library [lImportLibName]  could not be imported. Please have a look at the error list. Do you still want to continue importing more libraries?}
		If flag false
			Do lMasterErrors.$merge(lErrors)
			Do lMasterWarnings.$merge(lWarnings)
			Break to end of loop
		End If
	End If
	Do lMasterErrors.$merge(lErrors)
	Do lMasterWarnings.$merge(lWarnings)
End For

If lMasterErrors.$linecount=0
	Do method writeBaseVersion (iPath2LibsDir)
End If

Do $cinst.$showIssuesOverview(lMasterErrors,lMasterWarnings)